Icons for MenuStrip									- Done
Read Images from Zip files
Drag and Drop Loading								- Done
Multi-Page (ICO or GIF) viewing
Animate/mask buttons								- Done
Fullscreen mode										- Done
Zoom in full screen									- Done
Scroll wheel zoom									- Done
Grabbing and panning image when zoomed				- Done
Correct sizing										- Done
Keyboard controls									- Done
Ensure files exist/refresh file list				- Done
Layered buttons that fade in and out
Button tooltips										- Done except for FitSizeButton
Implement Open In
Implement About menu item							- Done
MainForm title changes to the current file name		- Done
Add program settings for window size and position	- Done
Implement rotation buttons							- Done
Implement size button								- Done (buggy)
Implement fit to window and actual size buttons		
Add user preferences window and button:
	Keyboard shorcut tab
		Two columns, primary and secondary keys
		Prompt for conflicts on key change
	Enable/Disable social media option
	Slide Show Speed default
Implement portable version
Implement integration with social media
Add file association
Implement the features for the File menu item		- Done
Context menu on image right click:					- Almost (Open With)
	Open With
	-												- Done
	Open File Location								- Done
	-												- Done
	Set as Desktop Background						- Done
	-												- Done
	Rotate Clockwise								- Done
	Rotate Counterclockwise							- Done
	-												- Done
	Copy											- Done
	Delete											- Done
	-												- Done
	Properties										- Done
Add keyboard shortcut text (refer to preferences)

Context menu when right clicking in fullscreen mode:
	Next
	Previous
	-
	Slide Show - Play
	Slide Show - Pause
	-
	Slide Show Mode - Loop
	Slide Show Mode - Shuffle
	-
	Slide Show Speed - Slow
	Slide Show Speed - Medium
	Slide Show Speed - Fast
	-
	[Regular Context Menu]
	-
	Exit
Implement as extension of regular
	(may need to move base code to method)
	Load Order
		list menu items
		call base load
		list exit item
	Exit fullscreen for certain items
		Open With
		Open File Location
		Properties

Small bugs that need to be fixed eventually:
The delete button returns to the hover state after a file deletion. It won't go back to active state until you pass over it with the mouse.

Major Bugs:

Fixed Bugs:
When the new list of files is generated after a watcher event is raised, the current image should remain the same. => So that the following
image was the same as it was before unless another image was inserted in its place. ie. Order should be preserved.
Returning from maximize after opening a new instance of the program with old window state (maximized) state and sizes will still cause the form to retain the maximized size.
The image box focuses even though the main form is out of focus.
Fix the zooming maximum and minimum to be a ratio of the screen and not the window size.
Aero regions do not have a handle where the user can click on.
[^Related] Alpha-blending of the buttons is not handled correctly.
The centering the picture box within image box where it appears that the picture box is offset to the right.
Redrawing button images on window resize results in a momentary artifact.
MenuStrip's text is improperly drawn, 'causing it to be semi transparent. It's paint implementation seems to involve the form's TransparencyKey, which was changed to null to prevent interference with Aero.
When the picture still exceeds the window, point zooming out will cause the image to be out of place, 'causing "snapping" when the image
is centered after being sized down within the window bounds. The ratios need to be adjusted accordingly.
Flickering occurs when zooming out along the right and bottom edges.
Animation delay minimum for animated GIFs in a PictureBox is presumably 100ms, which is unacceptable, as many GIFs have higher FPSs.
If the image doesn't exceed the window, it won't be restricted within the window when moved by the mouse.
Nearest Neighbor Interpolation mode creates very blocky images when the presentation size is smaller than its original size. However, using default has been
known to cause major performance problems in the past, especially when enlarging the image. The aesthetic result is bad as well, misrepresenting the pixel makeup
of the image. To fix this, the default interpolation algorithm is used for when the image is its original size or smaller. The algorithm benefits from the smaller
size of the image, and requires less calculation. Nearest Neighbor is used when either dimension of the image exceeds the original. The known performance boost is
best used in this situation.

Concerns:
Animated GIFs currently cannot be rotated, as all animation is removed from the image.
When rotating and then saving JPEGs, the compression is default to that of ImageFormat.JPEG. This assumed to be 75%. Currently, it is unknown
whether it is possible to get the original compression level and use it when saving. As a result, images may lose quality if the compression
level, which is 75% by default, is lower than that of the original image. As a result, I would advise users to use truly lossless formats,
such as PNGs. [Upon further evaluation, the default compression level is the same across all formats.]

Non-Issues:
Memory Usage:
"The runtime is taking advantage of a large amount of free memory to reduce the impact of the garbage collector on the performance of your application. The "problem" 
here is a general lack of understanding (e.g. your users) that when a system has more memory, it's ok to use it (otherwise what's the point?)."
http://stackoverflow.com/questions/2706805/memory-usage-in-c-sharp-net-app-is-very-high-until-i-call-system-gc-collect